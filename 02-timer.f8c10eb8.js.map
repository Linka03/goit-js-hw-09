{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,S,aAIA,MAAMC,EAAiBC,SAASC,eAAe,mBACzCC,EAAcF,SAASG,cAAc,gBACrCC,EAAcJ,SAASG,cAAc,eACrCE,EAAeL,SAASG,cAAc,gBACtCG,EAAiBN,SAASG,cAAc,kBACxCI,EAAiBP,SAASG,cAAc,kBAE9C,IAAIK,EAEJ,MAAMC,EAAU,CACdC,YAAY,EACZC,WAAW,EACXC,YAAa,IAAIC,KACjBC,gBAAiB,EACjBC,QAAQC,GACeA,EAAc,IACf,IAAIH,MAEtBI,EAAAC,GAASC,OAAOC,QAAQ,uCACxBlB,EAAYmB,UAAW,GAEvBnB,EAAYmB,UAAW,C,GAqB7B,SAASC,EAAgBC,GACvB,MAAMC,EAAiBD,EAAU,IAAIV,KAErC,GAAIW,GAAkB,EAGpB,OAFAC,cAAcjB,QACdkB,EAAY,GAId,MAAMC,KAAEA,EAAIC,MAAEA,EAAKC,QAAEA,EAAOC,QAAEA,GAIhC,SAAmBC,GACjB,MAAMC,EAAS,IACTC,EAAkB,GAATD,EACTE,EAAgB,GAATD,EACPE,EAAa,GAAPD,EAENP,EAAOS,KAAKC,MAAMN,EAAKI,GACvBP,EAAQQ,KAAKC,MAAMN,EAAMI,EAAOD,GAChCL,EAAUO,KAAKC,MAAMN,EAAOI,EAAOD,EAAQD,GAC3CH,EAAUM,KAAKC,MAAMN,EAAQI,EAAOD,EAAQD,EAAUD,GAE5D,MAAO,C,KAAEL,E,MAAMC,E,QAAOC,E,QAASC,E,CAfWQ,CAAUd,GACpDE,EAAYC,EAAMC,EAAOC,EAASC,E,CAiBpC,SAASJ,EAAYC,EAAMC,EAAOC,EAASC,GACzC1B,EAAYmC,YAAcC,EAAeb,GACzCtB,EAAakC,YAAcC,EAAeZ,GAC1CtB,EAAeiC,YAAcC,EAAeX,GAC5CtB,EAAegC,YAAcC,EAAeV,E,CAG9C,SAASU,EAAeC,GACtB,OAAOA,EAAMC,WAAWC,SAAS,EAAG,I,EAnDtC,EAAA9C,EAAA+C,SAAU,mBAAoBnC,GAsD9BP,EAAY2C,iBAAiB,SApD7B,WACEpB,cAAcjB,GAEd,MAAMsC,EAAe,IAAIjC,KAAKd,EAAe0C,OAGzCK,GAFgB,IAAIjC,KAGtBI,EAAAC,GAASC,OAAOC,QAAQ,uCAI1BZ,EAAoBuC,YAAYzB,EAAiB,IAAMwB,E","sources":["src/js/02-timer.js"],"sourcesContent":["import flatpickr from 'flatpickr';\nimport 'flatpickr/dist/flatpickr.min.css';\nimport Notiflix from 'notiflix';\n\nconst datetimePicker = document.getElementById('datetime-picker');\nconst startButton = document.querySelector('[data-start]');\nconst daysElement = document.querySelector('[data-days]');\nconst hoursElement = document.querySelector('[data-hours]');\nconst minutesElement = document.querySelector('[data-minutes]');\nconst secondsElement = document.querySelector('[data-seconds]');\n\nlet countdownInterval;\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    const selectedDate = selectedDates[0];\n    const currentDate = new Date();\n    if (selectedDate <= currentDate) {\n      Notiflix.Notify.failure('Please choose a date in the future.');\n      startButton.disabled = true;\n    } else {\n      startButton.disabled = false;\n    }\n  },\n};\n\nflatpickr('#datetime-picker', options);\n\nfunction startCountdown() {\n  clearInterval(countdownInterval);\n\n  const selectedDate = new Date(datetimePicker.value);\n  const currentDate = new Date();\n\n  if (selectedDate <= currentDate) {\n    Notiflix.Notify.failure('Please choose a date in the future.');\n    return;\n  }\n\n  countdownInterval = setInterval(updateCountdown, 1000, selectedDate);\n}\n\nfunction updateCountdown(endDate) {\n  const timeDifference = endDate - new Date();\n\n  if (timeDifference <= 0) {\n    clearInterval(countdownInterval);\n    displayTime(0);\n    return;\n  }\n\n  const { days, hours, minutes, seconds } = convertMs(timeDifference);\n  displayTime(days, hours, minutes, seconds);\n}\n\nfunction convertMs(ms) {\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  const days = Math.floor(ms / day);\n  const hours = Math.floor((ms % day) / hour);\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n\nfunction displayTime(days, hours, minutes, seconds) {\n  daysElement.textContent = addLeadingZero(days);\n  hoursElement.textContent = addLeadingZero(hours);\n  minutesElement.textContent = addLeadingZero(minutes);\n  secondsElement.textContent = addLeadingZero(seconds);\n}\n\nfunction addLeadingZero(value) {\n  return value.toString().padStart(2, '0');\n}\n\nstartButton.addEventListener('click', startCountdown);\n"],"names":["$fbklV","parcelRequire","$40d383fb392a7037$var$datetimePicker","document","getElementById","$40d383fb392a7037$var$startButton","querySelector","$40d383fb392a7037$var$daysElement","$40d383fb392a7037$var$hoursElement","$40d383fb392a7037$var$minutesElement","$40d383fb392a7037$var$secondsElement","$40d383fb392a7037$var$countdownInterval","$40d383fb392a7037$var$options","enableTime","time_24hr","defaultDate","Date","minuteIncrement","onClose","selectedDates","$parcel$interopDefault","$7Y9D8","Notify","failure","disabled","$40d383fb392a7037$var$updateCountdown","endDate","timeDifference","clearInterval","$40d383fb392a7037$var$displayTime","days","hours","minutes","seconds","ms","second","minute","hour","day","Math","floor","$40d383fb392a7037$var$convertMs","textContent","$40d383fb392a7037$var$addLeadingZero","value","toString","padStart","default","addEventListener","selectedDate","setInterval"],"version":3,"file":"02-timer.f8c10eb8.js.map"}